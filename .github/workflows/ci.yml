name: CI

on:
  push:
    branches: [ main, master ]
    tags:
      - 'v*'
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dev deps only
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
      - name: Run tests
        run: pytest

  integration:
    # Optional heavier test - won't block merges
    continue-on-error: true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install app deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt -r requirements-dev.txt
      - name: Install Ollama
        run: curl -fsSL https://ollama.ai/install.sh | sh
      - name: Start Ollama
        run: |
          nohup ollama serve > /tmp/ollama.log 2>&1 &
          for i in {1..30}; do
            sleep 1
            ollama list && break
          done
      - name: Pull model
        run: ollama pull llama3
      - name: Smoke the pipeline (no UI)
        env:
          OLLAMA_MODEL: llama3
          DOCUMENTS_DIR: ./documents
          CHROMA_DB_PATH: ./chroma_db_ci
        run: |
          python - <<'PY'
          # Minimal programmatic check: import, build retriever, ask a trivial Q
          import os, sys
          # If your app exposes helper functions, import and call them here.
          # As a fallback, just ensure imports don't explode:
          import app
          print("Imported app OK")
          PY

  release:
    needs: test
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v4
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
          draft: false
          prerelease: false
          body: |
            # ðŸ§  NEXUS Release

            ## Installation
            ```bash
            curl -sSL https://raw.githubusercontent.com/jeremylongshore/nexus-rag/main/install.sh | bash
            ```

            ## What's Changed
            See automated changelog below.
          files: |
            README.md
            requirements.txt
            install.sh